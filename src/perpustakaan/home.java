/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package perpustakaan;

import java.awt.LayoutManager;
import java.io.File;
import java.sql.Connection;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Lenovo
 */
public class home extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    
    DefaultTableModel tbl1 = new DefaultTableModel() {
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
    DefaultTableModel tbl2 = new DefaultTableModel() {
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
    DefaultTableModel tbl3 = new DefaultTableModel() {
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
    
    public home() {
        initComponents();
        
        tampil_peminjaman();
        tampil_buku();
        tampil_anggota();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodypanel = new javax.swing.JPanel();
        menupanel = new javax.swing.JPanel();
        jLkeluar = new javax.swing.JLabel();
        jLkelolaBuku = new javax.swing.JLabel();
        jLpeminjaman = new javax.swing.JLabel();
        jLkelolaAnggota = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        mainpanel = new javax.swing.JPanel();
        jPpeminjaman = new javax.swing.JPanel();
        jLubah = new javax.swing.JLabel();
        jLtambah = new javax.swing.JLabel();
        jLhapus = new javax.swing.JLabel();
        jTcariPeminjaman = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTblPeminjaman = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        refresh = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPkelolaBuku = new javax.swing.JPanel();
        jLubah1 = new javax.swing.JLabel();
        jLhapus1 = new javax.swing.JLabel();
        jLtambah1 = new javax.swing.JLabel();
        jTcariBuku = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblBuku = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        refresh1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPkelolaAnggota = new javax.swing.JPanel();
        jLubah2 = new javax.swing.JLabel();
        jLhapus2 = new javax.swing.JLabel();
        jLtambah2 = new javax.swing.JLabel();
        jTcariAnggota = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblAnggota = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        refresh2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPlaporan = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jDakhir = new com.toedter.calendar.JDateChooser();
        jDawal = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(208, 176, 160));
        setMaximumSize(new java.awt.Dimension(1200, 600));
        setMinimumSize(new java.awt.Dimension(1200, 600));
        setResizable(false);

        bodypanel.setBackground(new java.awt.Color(208, 176, 160));

        menupanel.setBackground(new java.awt.Color(208, 176, 160));
        menupanel.setLayout(null);

        jLkeluar.setBackground(new java.awt.Color(255, 239, 231));
        jLkeluar.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        jLkeluar.setForeground(new java.awt.Color(236, 227, 218));
        jLkeluar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLkeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLkeluarMouseClicked(evt);
            }
        });
        menupanel.add(jLkeluar);
        jLkeluar.setBounds(50, 510, 190, 40);

        jLkelolaBuku.setBackground(new java.awt.Color(236, 227, 218));
        jLkelolaBuku.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        jLkelolaBuku.setForeground(new java.awt.Color(236, 227, 218));
        jLkelolaBuku.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLkelolaBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLkelolaBukuMouseClicked(evt);
            }
        });
        menupanel.add(jLkelolaBuku);
        jLkelolaBuku.setBounds(50, 350, 160, 40);

        jLpeminjaman.setBackground(new java.awt.Color(236, 227, 218));
        jLpeminjaman.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        jLpeminjaman.setForeground(new java.awt.Color(236, 227, 218));
        jLpeminjaman.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLpeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLpeminjamanMouseClicked(evt);
            }
        });
        menupanel.add(jLpeminjaman);
        jLpeminjaman.setBounds(60, 230, 160, 40);

        jLkelolaAnggota.setBackground(new java.awt.Color(255, 239, 231));
        jLkelolaAnggota.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        jLkelolaAnggota.setForeground(new java.awt.Color(236, 227, 218));
        jLkelolaAnggota.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLkelolaAnggota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLkelolaAnggotaMouseClicked(evt);
            }
        });
        menupanel.add(jLkelolaAnggota);
        jLkelolaAnggota.setBounds(50, 290, 190, 40);

        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        menupanel.add(jLabel5);
        jLabel5.setBounds(50, 410, 120, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/hal menu.png"))); // NOI18N
        menupanel.add(jLabel1);
        jLabel1.setBounds(-2, 1, 340, 600);

        mainpanel.setBackground(new java.awt.Color(208, 176, 160));
        mainpanel.setLayout(new java.awt.CardLayout());

        jPpeminjaman.setBackground(new java.awt.Color(208, 176, 160));
        jPpeminjaman.setLayout(null);

        jLubah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo ubah.png"))); // NOI18N
        jLubah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLubah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLubahMouseClicked(evt);
            }
        });
        jPpeminjaman.add(jLubah);
        jLubah.setBounds(360, 510, 170, 60);

        jLtambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo tambah.png"))); // NOI18N
        jLtambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLtambah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLtambahMouseClicked(evt);
            }
        });
        jPpeminjaman.add(jLtambah);
        jLtambah.setBounds(20, 510, 170, 60);

        jLhapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo hapus.png"))); // NOI18N
        jLhapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLhapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLhapusMouseClicked(evt);
            }
        });
        jPpeminjaman.add(jLhapus);
        jLhapus.setBounds(190, 510, 170, 60);

        jTcariPeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTcariPeminjamanActionPerformed(evt);
            }
        });
        jTcariPeminjaman.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTcariPeminjamanKeyTyped(evt);
            }
        });
        jPpeminjaman.add(jTcariPeminjaman);
        jTcariPeminjaman.setBounds(600, 40, 220, 30);

        jTblPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Anggota", "Nama", "Email", "Kode Buku", "Judul Buku", "Tanggal Pinjam"
            }
        ));
        jTblPeminjaman.setToolTipText("");
        jTblPeminjaman.setSelectionBackground(new java.awt.Color(208, 180, 142));
        jTblPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTblPeminjaman);

        jPpeminjaman.add(jScrollPane3);
        jScrollPane3.setBounds(30, 90, 790, 402);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/pe,injaman.png"))); // NOI18N
        jPpeminjaman.add(jLabel4);
        jLabel4.setBounds(80, 30, 320, 50);

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/refresh.png"))); // NOI18N
        refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });
        jPpeminjaman.add(refresh);
        refresh.setBounds(740, 510, 68, 70);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/hal_menu1.png"))); // NOI18N
        jPpeminjaman.add(jLabel6);
        jLabel6.setBounds(0, 0, 850, 600);

        mainpanel.add(jPpeminjaman, "card2");

        jPkelolaBuku.setBackground(new java.awt.Color(208, 176, 160));
        jPkelolaBuku.setLayout(null);

        jLubah1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo ubah.png"))); // NOI18N
        jLubah1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLubah1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLubah1MouseClicked(evt);
            }
        });
        jPkelolaBuku.add(jLubah1);
        jLubah1.setBounds(360, 510, 170, 60);

        jLhapus1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo hapus.png"))); // NOI18N
        jLhapus1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLhapus1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLhapus1MouseClicked(evt);
            }
        });
        jPkelolaBuku.add(jLhapus1);
        jLhapus1.setBounds(190, 510, 170, 60);

        jLtambah1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo tambah.png"))); // NOI18N
        jLtambah1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLtambah1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLtambah1MouseClicked(evt);
            }
        });
        jPkelolaBuku.add(jLtambah1);
        jLtambah1.setBounds(20, 510, 170, 60);

        jTcariBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTcariBukuActionPerformed(evt);
            }
        });
        jTcariBuku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTcariBukuKeyTyped(evt);
            }
        });
        jPkelolaBuku.add(jTcariBuku);
        jTcariBuku.setBounds(600, 40, 220, 30);

        jTblBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kode Buku", "Judul Buku", "Kategori", "Penulis"
            }
        ));
        jTblBuku.setGridColor(new java.awt.Color(97, 51, 23));
        jTblBuku.setSelectionBackground(new java.awt.Color(208, 180, 142));
        jTblBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblBukuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTblBuku);

        jPkelolaBuku.add(jScrollPane2);
        jScrollPane2.setBounds(30, 90, 790, 402);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/buku.png"))); // NOI18N
        jPkelolaBuku.add(jLabel3);
        jLabel3.setBounds(80, 30, 190, 50);

        refresh1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/refresh.png"))); // NOI18N
        refresh1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh1MouseClicked(evt);
            }
        });
        jPkelolaBuku.add(refresh1);
        refresh1.setBounds(740, 510, 68, 70);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/hal_menu1.png"))); // NOI18N
        jPkelolaBuku.add(jLabel7);
        jLabel7.setBounds(0, 0, 850, 600);

        mainpanel.add(jPkelolaBuku, "card3");

        jPkelolaAnggota.setBackground(new java.awt.Color(208, 176, 160));
        jPkelolaAnggota.setLayout(null);

        jLubah2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo ubah.png"))); // NOI18N
        jLubah2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLubah2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLubah2MouseClicked(evt);
            }
        });
        jPkelolaAnggota.add(jLubah2);
        jLubah2.setBounds(360, 510, 170, 60);

        jLhapus2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo hapus.png"))); // NOI18N
        jLhapus2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLhapus2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLhapus2MouseClicked(evt);
            }
        });
        jPkelolaAnggota.add(jLhapus2);
        jLhapus2.setBounds(190, 510, 170, 60);

        jLtambah2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo tambah.png"))); // NOI18N
        jLtambah2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLtambah2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLtambah2MouseClicked(evt);
            }
        });
        jPkelolaAnggota.add(jLtambah2);
        jLtambah2.setBounds(20, 510, 170, 60);

        jTcariAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTcariAnggotaActionPerformed(evt);
            }
        });
        jTcariAnggota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTcariAnggotaKeyTyped(evt);
            }
        });
        jPkelolaAnggota.add(jTcariAnggota);
        jTcariAnggota.setBounds(600, 40, 220, 30);

        jTblAnggota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Anggota", "Nama", "Jenis Kelamin", "Email", "Tanggal terdaftar"
            }
        ));
        jTblAnggota.setSelectionBackground(new java.awt.Color(208, 180, 142));
        jTblAnggota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblAnggotaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblAnggota);

        jPkelolaAnggota.add(jScrollPane1);
        jScrollPane1.setBounds(30, 90, 790, 402);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/anggota.png"))); // NOI18N
        jPkelolaAnggota.add(jLabel2);
        jLabel2.setBounds(80, 30, 230, 50);

        refresh2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/refresh.png"))); // NOI18N
        refresh2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh2MouseClicked(evt);
            }
        });
        jPkelolaAnggota.add(refresh2);
        refresh2.setBounds(740, 510, 68, 70);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/hal_menu1.png"))); // NOI18N
        jPkelolaAnggota.add(jLabel8);
        jLabel8.setBounds(0, 0, 850, 600);

        mainpanel.add(jPkelolaAnggota, "card4");

        jPlaporan.setBackground(new java.awt.Color(208, 176, 160));
        jPlaporan.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(97, 51, 23));
        jLabel10.setText("Tanggal Akhir");
        jPlaporan.add(jLabel10);
        jLabel10.setBounds(80, 230, 170, 30);

        jLabel11.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(97, 51, 23));
        jLabel11.setText("Tanggal Awal");
        jPlaporan.add(jLabel11);
        jLabel11.setBounds(80, 170, 170, 30);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo cetak.png"))); // NOI18N
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPlaporan.add(jLabel12);
        jLabel12.setBounds(500, 220, 110, 40);
        jPlaporan.add(jDakhir);
        jDakhir.setBounds(270, 230, 190, 30);
        jPlaporan.add(jDawal);
        jDawal.setBounds(270, 170, 190, 30);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/home laporan.png"))); // NOI18N
        jPlaporan.add(jLabel9);
        jLabel9.setBounds(0, 0, 850, 599);

        mainpanel.add(jPlaporan, "card5");

        javax.swing.GroupLayout bodypanelLayout = new javax.swing.GroupLayout(bodypanel);
        bodypanel.setLayout(bodypanelLayout);
        bodypanelLayout.setHorizontalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodypanelLayout.createSequentialGroup()
                .addComponent(menupanel, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        bodypanelLayout.setVerticalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(bodypanelLayout.createSequentialGroup()
                .addComponent(menupanel, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bodypanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodypanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLpeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLpeminjamanMouseClicked
        // TODO add your handling code here:
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        //add panel
        mainpanel.add(jPpeminjaman);
        mainpanel.repaint();
        mainpanel.revalidate();
    }//GEN-LAST:event_jLpeminjamanMouseClicked

    private void jLkelolaBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLkelolaBukuMouseClicked
        // TODO add your handling code here:
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        //add panel
        mainpanel.add(jPkelolaBuku);
        mainpanel.repaint();
        mainpanel.revalidate();
    }//GEN-LAST:event_jLkelolaBukuMouseClicked

    private void jLkelolaAnggotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLkelolaAnggotaMouseClicked
        // TODO add your handling code here:
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        //add panel
        mainpanel.add(jPkelolaAnggota);
        mainpanel.repaint();
        mainpanel.revalidate();
    }//GEN-LAST:event_jLkelolaAnggotaMouseClicked

    private void jLkeluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLkeluarMouseClicked
        // TODO add your handling code here:
        int logout = JOptionPane.YES_NO_OPTION;
        int logoutResult = JOptionPane.showConfirmDialog(this, "apakah anda yakin akan keluar?", "keluar", logout);
        if (logoutResult==0){
            System.exit(0);
        }else{
            
        }
    }//GEN-LAST:event_jLkeluarMouseClicked

    private void jTcariPeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTcariPeminjamanActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTcariPeminjamanActionPerformed

    private void jTcariBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTcariBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTcariBukuActionPerformed

    private void jTcariAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTcariAnggotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTcariAnggotaActionPerformed

    private void jTcariAnggotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTcariAnggotaKeyTyped
        // TODO add your handling code here:
        search_anggota();
    }//GEN-LAST:event_jTcariAnggotaKeyTyped

    private void jTcariBukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTcariBukuKeyTyped
        // TODO add your handling code here:
        search_buku();
    }//GEN-LAST:event_jTcariBukuKeyTyped

    private void jTcariPeminjamanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTcariPeminjamanKeyTyped
        // TODO add your handling code here:
        search_peminjaman();
    }//GEN-LAST:event_jTcariPeminjamanKeyTyped

    private void jLhapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLhapusMouseClicked
        // TODO add your handling code here:
        int baris = jTblPeminjaman.getSelectedRow();
        if (baris >= 0) {
            IdAnggota = tbl1.getValueAt(baris, 0).toString();
            Kode = tbl1.getValueAt(baris, 3).toString();
            TanggalPinjam = tbl1.getValueAt(baris, 5).toString();
        
        int x = JOptionPane.showConfirmDialog(null, 
                "Data Peminjaman Buku dengan\n\nKode Buku: "+Kode+"\nID Anggota: "
                        +IdAnggota+"\nTanggal Peminjaman: "
                        +TanggalPinjam+"\n\nakan Anda hapus, yakin?", "Konfirmasi", 
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE); 
        if (x == JOptionPane.YES_OPTION) {
            try {
                Connection con = new perpustakaan.koneksi().GetConnection();
                String sql = "DELETE FROM peminjaman WHERE kode_buku = '"+Kode+"' AND tanggal_pinjam = '"+TanggalPinjam+"'";
                java.sql.Statement st = con.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                tampil_peminjaman();
                
            } catch (Exception e) {
                System.err.println("Terjadi kesalahan:"+e);
            }
        }
        }else {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data yang akan dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
         
        }
    }//GEN-LAST:event_jLhapusMouseClicked

    private void jLubahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLubahMouseClicked
        // TODO add your handling code here:
        int baris = jTblPeminjaman.getSelectedRow();
        if (baris >= 0) {
            IdAnggota = tbl1.getValueAt(baris, 0).toString();
            Kode = tbl1.getValueAt(baris, 3).toString();
            TanggalPinjam = tbl1.getValueAt(baris, 5).toString();
            
            try {
                Connection con = new perpustakaan.koneksi().GetConnection();
                String sql = "SELECT * FROM peminjaman WHERE id_anggota = '"+IdAnggota
                        +"' AND kode_buku = '"+Kode+"' AND tanggal_pinjam = '"+TanggalPinjam+"'";
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
            
                if (rs.next()) {
                    String id = rs.getString("id");
                    ubahPeminjaman n = new ubahPeminjaman();
                    n.setVisible(true);
                    n.tampilDataPeminjaman(id);
                    
                    tampil_peminjaman();
                }
                
            } catch (Exception e) {
                System.err.println("Terjadi kesalahan:"+e);
            }
        }else {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data yang akan diubah!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }    
    }//GEN-LAST:event_jLubahMouseClicked

    private void jLtambahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLtambahMouseClicked
        // TODO add your handling code here:
        tambahPeminjaman n = new tambahPeminjaman();
        n.setVisible(true);
        
        tampil_peminjaman();
    }//GEN-LAST:event_jLtambahMouseClicked

    private void jLtambah1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLtambah1MouseClicked
        // TODO add your handling code here:
        tambahBuku n = new tambahBuku();
        n.setVisible(true);
        
        tampil_buku();
    }//GEN-LAST:event_jLtambah1MouseClicked

    private void jLubah1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLubah1MouseClicked
        // TODO add your handling code here:
        int baris = jTblBuku.getSelectedRow();
        if (baris >= 0) {
            Kode = tbl2.getValueAt(baris, 0).toString();
            try {
                Connection con = new perpustakaan.koneksi().GetConnection();
                String sql = "SELECT * FROM buku WHERE kode_buku = '"+Kode+"'";
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                Kode = rs.getString("kode_buku");
                ubahBuku n = new ubahBuku();
                n.setVisible(true);
                n.tampilDataBuku(Kode);
                
                
            }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Gagal menyeleksi data!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data yang akan diubah!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_jLubah1MouseClicked

    private void jLhapus1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLhapus1MouseClicked
        // TODO add your handling code here:
        int baris = jTblBuku.getSelectedRow();
        if (baris >= 0) {
            Kode = tbl2.getValueAt(baris, 0).toString();
            Judul = tbl2.getValueAt(baris, 1).toString();
            
            int x = JOptionPane.showConfirmDialog(null, "Data Buku dengan\n\nJudul Buku: "+Judul+"\nKode Buku: "+Kode
                    +"\n\nakan Anda hapus, yakin?\nData peminjaman dengan BUKU ini juga akan ikut terhapus!", "Konfirmasi", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (x == JOptionPane.YES_OPTION) {
                try {
                    Connection con = new perpustakaan.koneksi().GetConnection();
                    String sql = "DELETE FROM buku WHERE kode_buku = '"+Kode+"'";
                    String sql2 = "DELETE FROM peminjaman WHERE kode_buku = '"+Kode+"'";
                    java.sql.Statement st = con.createStatement();
                    st.executeUpdate(sql);
                    st.executeUpdate(sql2);
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    tampil_buku();
                } catch (Exception e) {
                    System.err.println("Terjadi kesalahan:"+e);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data yang akan dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }   
    }//GEN-LAST:event_jLhapus1MouseClicked

    private void jLtambah2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLtambah2MouseClicked
        // TODO add your handling code here:
        tambahAnggota n = new tambahAnggota();
        n.setVisible(true);
        
        tampil_anggota();
    }//GEN-LAST:event_jLtambah2MouseClicked

    private void jLhapus2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLhapus2MouseClicked
        // TODO add your handling code here:
        int baris = jTblAnggota.getSelectedRow();
        if (baris >= 0) {
            IdAnggota = tbl3.getValueAt(baris, 0).toString();
            Nama = tbl3.getValueAt(baris, 1).toString();
            int x = JOptionPane.showConfirmDialog(null, "Data Siswa dengan\n\nID Anggota: "+IdAnggota+"\nNama Lengkap: "+Nama
                    +"\n\nakan Anda hapus, yakin?\nData peminjaman dengan SISWA ini juga akan ikut terhapus!", "Konfirmasi",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (x == JOptionPane.YES_OPTION) {
                try {
                Connection con = new perpustakaan.koneksi().GetConnection();
                String sql = "DELETE FROM anggota WHERE id_anggota = '"+IdAnggota+"'";
                String sql2 = "DELETE FROM peminjaman WHERE id_anggota = '"+IdAnggota+"'";
                java.sql.Statement st = con.createStatement();
                st.executeUpdate(sql);
                st.executeUpdate(sql2);
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                tampil_anggota();
                } catch (Exception e) {
                    System.err.println("Terjadi kesalahan:"+e);
                }
                
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data yang akan dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jLhapus2MouseClicked

    private void jLubah2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLubah2MouseClicked
        // TODO add your handling code here:
        int baris = jTblAnggota.getSelectedRow();
        if (baris >= 0) {
            IdAnggota = tbl3.getValueAt(baris, 0).toString();
            try {
                Connection con = new perpustakaan.koneksi().GetConnection();
                String sql = "SELECT * FROM anggota WHERE id_anggota = '"+IdAnggota+"'";
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                if (rs.next()) {
                    IdAnggota = rs.getString("id_anggota");
                    ubahAnggota n = new ubahAnggota();
                    n.setVisible(true);
                    n.tampilDataAnggota(IdAnggota);
                    
                    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Gagal menyeleksi data!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Anda belum memilih data yang akan diubah!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jLubah2MouseClicked

    private void jTblPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblPeminjamanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTblPeminjamanMouseClicked

    private void jTblBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblBukuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTblBukuMouseClicked

    private void jTblAnggotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblAnggotaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTblAnggotaMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        //add panel
        mainpanel.add(jPlaporan);
        mainpanel.repaint();
        mainpanel.revalidate();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void refresh2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh2MouseClicked
        // TODO add your handling code here:
        tampil_anggota();
    }//GEN-LAST:event_refresh2MouseClicked

    private void refresh1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh1MouseClicked
        // TODO add your handling code here:
        tampil_buku();
    }//GEN-LAST:event_refresh1MouseClicked

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        // TODO add your handling code here:
        tampil_peminjaman();
    }//GEN-LAST:event_refreshMouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        try {
            Map<String, Object> parameter = new HashMap<String, Object>();
            parameter.put("awal", jDawal.getDate());
            parameter.put("akhirr", jDakhir.getDate());
            File file = new File("src/perpustakaan/report.jrxml");
            JasperDesign JDes = JRXmlLoader.load(file);
            JasperReport JReport = JasperCompileManager.compileReport(JDes);
            JasperPrint JPrint = JasperFillManager.fillReport(JReport, parameter, koneksi.GetConnection());
            JasperViewer.viewReport(JPrint, false);
        } catch (Exception e) {
            System.out.println("terjadi kesalahan:"+e);
        }
    }//GEN-LAST:event_jLabel12MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }
    
    private void tampil_peminjaman() {
        Object []baris = {"ID Anggota", "Nama", "Email", "Kode Buku", "Judul Buku", "Tanggal Peminjaman"};
        tbl1 = new DefaultTableModel(null, baris) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTblPeminjaman.setModel(tbl1);
        try {
            Connection con = new perpustakaan.koneksi().GetConnection();
            String sql = "SELECT * FROM peminjaman ORDER BY id ASC";
            java.sql.Statement stat = con.createStatement();
            java.sql.ResultSet hasil = stat.executeQuery(sql);
            
            while (hasil.next()) {
                IdAnggota = hasil.getString("id_anggota");
                Nama = hasil.getString("nama");
                Email = hasil.getString("email");
                Kode = hasil.getString("kode_buku");
                Judul = hasil.getString("judul_buku");
                TanggalPinjam = hasil.getString("tanggal_pinjam");
                
                String[] data = {IdAnggota, Nama, Email, Kode, Judul, TanggalPinjam};
                tbl1.addRow(data);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Gagal Menampilkan DATA!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            
        }
    }
    
    private void tampil_buku() {
        Object []baris = {"Kode Buku", "Judul Buku", "Kategori","Penulis"};
        tbl2 = new DefaultTableModel(null, baris) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTblBuku.setModel(tbl2);
        try {
            Connection con = new perpustakaan.koneksi().GetConnection();
            String sql = "SELECT * FROM buku ORDER BY kode_buku ASC";
            java.sql.Statement stat = con.createStatement();
            java.sql.ResultSet hasil = stat.executeQuery(sql);
            
            while (hasil.next()) {
                Kode = hasil.getString("kode_buku");
                Judul = hasil.getString("judul_buku");
                Kategori = hasil.getString("kategori");
                Penulis = hasil.getString("penulis");
                
                String[] data = {Kode, Judul, Kategori, Penulis};
                tbl2.addRow(data);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Menampilkan DATA!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            
        }
    }
    
    private void tampil_anggota() {
        Object []baris = {"ID Anggota", "Nama", "Jenis Kelamin", "Email", "Tanggal Terdaftar"};
        tbl3 = new DefaultTableModel(null, baris) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTblAnggota.setModel(tbl3);
        
        try {
            Connection con = new perpustakaan.koneksi().GetConnection();
            String sql = "SELECT * FROM anggota ORDER BY id_anggota ASC";
            java.sql.Statement stat = con.createStatement();
            java.sql.ResultSet hasil = stat.executeQuery(sql);
            
            while (hasil.next()) {
                IdAnggota = hasil.getString("ID_Anggota");
                Nama = hasil.getString("Nama");
                Jenkel = hasil.getString("jenis_kelamin");
                Email = hasil.getString("Email");
                TanggalTerdaftar = hasil.getString("tanggal_terdaftar");
                
                String[] data = {IdAnggota, Nama, Jenkel, Email, TanggalTerdaftar};
                tbl3.addRow(data);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Menampilkan DATA!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            
        }
    }
    
    private void search_peminjaman() {
        String query = jTcariPeminjaman.getText();
        
        Object []baris = {"ID Anggota", "Nama", "Email", "Kode Buku", "Judul Buku", "Tanggal Peminjaman"};
        tbl1 = new DefaultTableModel(null, baris) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTblPeminjaman.setModel(tbl1);
        
        try{
            Connection con = new perpustakaan.koneksi().GetConnection();
            String sql = "SELECT * FROM peminjaman WHERE BINARY "
                    + "id_anggota LIKE '%"+query+"%' "
                    + "OR nama LIKE '%"+query+"%' "
                    + "OR email LIKE '%"+query+"%' "
                    + "OR kode_buku LIKE '%"+query+"%' "
                    + "OR judul_buku LIKE '%"+query+"%' "
                    + "ORDER BY id ASC";
            java.sql.Statement stmt = con.createStatement();
            java.sql.ResultSet hasil = stmt.executeQuery(sql);
            
            while (hasil.next()) {
                IdAnggota = hasil.getString("id_anggota");
                Nama = hasil.getString("nama");
                Email = hasil.getString("email");
                Kode = hasil.getString("kode_buku");
                Judul = hasil.getString("judul_buku");
                TanggalPinjam = hasil.getString("tanggal_pinjam");
                
                String[] data = {IdAnggota, Nama, Email, Kode, Judul, TanggalPinjam};
                tbl1.addRow(data);
            }
        }catch(Exception e){
            
        }
    }
    
    private void search_buku() {
        String query = jTcariBuku.getText();
        Object []baris = {"Kode Buku", "Judul Buku", "Kategori","Penulis"};
        tbl2 = new DefaultTableModel(null, baris) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTblBuku.setModel(tbl2);
        
        try{
            Connection con = new perpustakaan.koneksi().GetConnection();
            String sql = "SELECT * FROM buku WHERE BINARY "
                    + "kode_buku LIKE '%"+query+"%' "
                    + "OR judul_buku LIKE '%"+query+"%' "
                    + "OR kategori LIKE '%"+query+"%' "
                    + "OR penulis LIKE '%"+query+"%' "
                    + "ORDER BY kode_buku ASC";
            java.sql.Statement stmt = con.createStatement();
            java.sql.ResultSet hasil = stmt.executeQuery(sql);
            
            while (hasil.next()) {
                Kode = hasil.getString("kode_buku");
                Judul = hasil.getString("judul_buku");
                Kategori = hasil.getString("kategori");
                Penulis = hasil.getString("penulis");
                String[] data = {Kode, Judul, Kategori, Penulis};
                tbl2.addRow(data);
            }
        }catch(Exception e){
            
        }
    }
    
    private void search_anggota() {
        String query = jTcariAnggota.getText();
        
        Object []baris = {"ID Anggota", "Nama", "Jenis Kelamin", "Email", "Tanggal Terdaftar"};
        tbl3 = new DefaultTableModel(null, baris) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTblAnggota.setModel(tbl3);
        
        try{
            Connection con = new perpustakaan.koneksi().GetConnection();
            String sql = "SELECT * FROM anggota WHERE BINARY "
                    + "id_anggota LIKE '%"+query+"%' "
                    + "OR nama LIKE '%"+query+"%' "
                    + "OR jenis_kelamin LIKE '%"+query+"%' "
                    + "OR email LIKE '%"+query+"%' "
                    + "ORDER BY id_anggota ASC";
            java.sql.Statement stmt = con.createStatement();
            java.sql.ResultSet hasil = stmt.executeQuery(sql);
            
            while (hasil.next()) {
                IdAnggota = hasil.getString("id_anggota");
                Nama = hasil.getString("nama");
                Jenkel = hasil.getString("jenis_kelamin");
                Email = hasil.getString("email");
                TanggalTerdaftar = hasil.getString("tanggal_terdaftar");
                
                String[] data = {IdAnggota, Nama, Jenkel, Email, TanggalTerdaftar};
                tbl3.addRow(data);
            }
        }catch(Exception e){
            
        }
    }
    
    public void jPeminjaman(){
        JPanel jp = new JPanel((LayoutManager) jPpeminjaman);
    }
    
    public String IdAnggota, Nama, Jenkel, Email, TanggalTerdaftar,
            Kode, Judul, Kategori, Penulis, TanggalPinjam;
    public String getIdAnggota(){
        return IdAnggota;
    }
    public String getNama(){
        return Nama;
    }
    public String getJenkel(){
        return Jenkel;
    }
    public String getEmail(){
        return Email;
    }
    public String getTanggalTerdaftar(){
        return TanggalTerdaftar;
    }
    public String getKode(){
        return Kode;
    }
    public String getJudul(){
        return Judul;
    }
    public String getKategori(){
        return Kategori;
    }
    public String getPenulis(){
        return Penulis;
    }
    public String getTanggalPinjam(){
        return TanggalPinjam;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodypanel;
    private com.toedter.calendar.JDateChooser jDakhir;
    private com.toedter.calendar.JDateChooser jDawal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLhapus;
    private javax.swing.JLabel jLhapus1;
    private javax.swing.JLabel jLhapus2;
    private javax.swing.JLabel jLkelolaAnggota;
    private javax.swing.JLabel jLkelolaBuku;
    private javax.swing.JLabel jLkeluar;
    private javax.swing.JLabel jLpeminjaman;
    private javax.swing.JLabel jLtambah;
    private javax.swing.JLabel jLtambah1;
    private javax.swing.JLabel jLtambah2;
    private javax.swing.JLabel jLubah;
    private javax.swing.JLabel jLubah1;
    private javax.swing.JLabel jLubah2;
    private javax.swing.JPanel jPkelolaAnggota;
    private javax.swing.JPanel jPkelolaBuku;
    private javax.swing.JPanel jPlaporan;
    private javax.swing.JPanel jPpeminjaman;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTblAnggota;
    private javax.swing.JTable jTblBuku;
    private javax.swing.JTable jTblPeminjaman;
    private javax.swing.JTextField jTcariAnggota;
    private javax.swing.JTextField jTcariBuku;
    private javax.swing.JTextField jTcariPeminjaman;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JPanel menupanel;
    private javax.swing.JLabel refresh;
    private javax.swing.JLabel refresh1;
    private javax.swing.JLabel refresh2;
    // End of variables declaration//GEN-END:variables

    
}
